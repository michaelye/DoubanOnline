package com.michael.doubanonline;

import java.util.ArrayList;
import java.util.HashMap;

import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ArrayAdapter;

import com.actionbarsherlock.app.ActionBar;
import com.actionbarsherlock.view.MenuItem;
import com.alibaba.fastjson.JSON;
import com.michael.doubanonline.base.RefreshActionBarActivity;
import com.michael.doubanonline.bean.Online;
import com.michael.doubanonline.bean.Onlines;
import com.michael.doubanonline.component.PullToRefreshListViewWithFooter;
import com.michael.doubanonline.component.PullToRefreshListViewWithFooter.OnFooterListViewLastItemVisibleListener;
import com.michael.doubanonline.component.PullToRefreshListViewWithFooter.OnFooterListViewRefreshListener;
import com.michael.doubanonline.db.DBManager;
import com.michael.doubanonline.http.InterfaceLib;
import com.michael.doubanonline.http.RequestTask;
import com.michael.doubanonline.http.RequestTask.OnTaskResultListener2;
import com.michael.doubanonline.util.L;
import com.michael.doubanonline.util.MathUtil;
import com.michael.doubanonline.util.ToastUtil;


/**
 * 线上活动主界面
 * 
 * https://api.douban.com/v2/onlines
 * 
 * 给AndroidClient一个是否刷新和缓存失效的时间
 * 
 * */
public class MainActivity extends RefreshActionBarActivity implements ActionBar.OnNavigationListener{

	/** 用来展示线上活动的ListView*/
	private PullToRefreshListViewWithFooter lvOnlines;
	/** ListView的适配器*/
	private MainAdapter adapter;
	/** ListView的数据源*/
	private ArrayList<Online> dataList;
	/** 数据源适配器*/
	private DBManager dbManager;
	
	@Override
	public void onCreate(Bundle savedInstanceState) {
		
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);
		setActionBar();
		iniComponent();
	}
	
	private void iniComponent()
	{
		lvOnlines = (PullToRefreshListViewWithFooter)findViewById(R.id.lvOnlines);
		dataList = new ArrayList<Online>();
		adapter = new MainAdapter(this, dataList);
		lvOnlines.setAdapter(adapter);
		dbManager = DBManager.getInstance();
		iniListener();
		pageNum = 1;
		cate = InterfaceLib.GetOnlineList.CATE_TYPE_DAY;
		getData();
	}
	
	private void iniListener(){
		
		//下拉刷新
		lvOnlines.setOnFooterListViewRefreshListener(new OnFooterListViewRefreshListener() {
			
			@Override
			public void onFooterListViewRefresh() {
				
			}
		});
		
		//显示更多
		lvOnlines.setOnFooterListViewLastItemVisibleListener(new OnFooterListViewLastItemVisibleListener() {
			
			@Override
			public void onFooterListViewLastItemVisible() {

			}
		});
		
		lvOnlines.setOnItemClickListener(new OnItemClickListener() {

			@Override
			public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
					
//				Online online = (Online)parent.getItemAtPosition(position);
//				Intent intent = new Intent(MainActivity.this, OnlineDetailActivity.class);
//				intent.putExtra(OnlineDetailActivity.INTENT_KEY_ID, online.id);
//				intent.putExtra(OnlineDetailActivity.INTENT_KEY_TITLE, online.title);
//				intent.putExtra(OnlineDetailActivity.INTENT_KEY_DETAIL, online.desc);
//				MainActivity.this.startActivity(intent);
			}
		});
	}
	
	/**
	 * 设置头部
	 * 
	 * */
	private void setActionBar() {

		ActionBar actionBar = getSupportActionBar();
		Context context = actionBar.getThemedContext();
		ArrayAdapter<CharSequence> list = ArrayAdapter.createFromResource(context, R.array.main_titles, R.layout.sherlock_spinner_item);//sherlock_spinner_item
		// list.setDropDownViewResource(R.layout.sherlock_spinner_dropdown_item);//这里有一个问题，如果高度不换掉会出错。所以使用自定义的layout,如下
		// https://groups.google.com/forum/?fromgroups=#!topic/actionbarsherlock/aODtoH2aS-s
		list.setDropDownViewResource(R.layout.list_action_bar_item);
		actionBar.setNavigationMode(ActionBar.NAVIGATION_MODE_LIST);
		actionBar.setListNavigationCallbacks(list, this);
		actionBar.setDisplayOptions(ActionBar.DISPLAY_SHOW_HOME);
		actionBar.setHomeButtonEnabled(true);//图标可以点击
//		actionBar.setBackgroundDrawable(context.getResources().getDrawable(R.drawable.action_bar_bg));
		actionBar.setDisplayShowCustomEnabled(true);
//		LinearLayout ll = new LinearLayout(this);
//		ivRotate = new ImageView(this);
//		ivRotate.setImageResource(android.R.drawable.ic_menu_rotate);
//		ivRotate.setOnClickListener(new OnClickListener() {
//			
//			@Override
//			public void onClick(View v) {
//				//刷新
//				getOnlineList(getCurrOnlineType());
//			}
//		});
//		ll.addView(ivRotate);
//		actionBar.setCustomView(ll, new LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT, Gravity.RIGHT|Gravity.CENTER));
	}
	
	/** 第几页*/
	private int pageNum;
	/** 每页请求的数据*/
	private int PAGE_SIZE = 30;
	/** 类别*/
	private String cate;
	
	/**
	 * 获取数据
	 * 
	 * */
	private void getData()
	{
		RequestTask request = new RequestTask(this, "获取活动列表");
		request.setOnTaskResultListener2(new OnTaskResultListener2() 
		{
			@Override
			public void onStart()
			{
				lvOnlines.setListViewFooterContent(PullToRefreshListViewWithFooter.LOADING_STATE_LOADING);
			}

			@Override
			public void onSuccess(String jsonResponse) 
			{
				if (jsonResponse != null) 
				{
					Onlines onlines = JSON.parseObject(jsonResponse, Onlines.class);
					L.e("****result****:", onlines+"");
					if(onlines != null)
					{
						if(pageNum == 1 && onlines.getOnlines().size() > 0)
						{
							dbManager.insertCache(DBManager.OnlineList, jsonResponse);// 写入缓存
						}
						updateListView(onlines);
					}
					else
					{
						ToastUtil.show("数据解析失败");
					}
				} 
				else
				{
					ToastUtil.show("获取图片失败");
				}
				lvOnlines.onRefreshComplete();
				lvOnlines.setListViewFooterContent(PullToRefreshListViewWithFooter.LOADING_STATE_DONE);
			}

			@Override
			public void onFail(String message) 
			{
				lvOnlines.onRefreshComplete();
				lvOnlines.setListViewFooterContent(PullToRefreshListViewWithFooter.LOADING_STATE_FAIL);
				pageNum--;
			}
			
			@Override
			public void onFinish()
			{
				
			}
			
		});
		HashMap<String, String> map = new HashMap<String, String>();
		map.put(InterfaceLib.GetOnlineList.cate, cate+"");
		map.put(InterfaceLib.GetOnlineList.start, pageNum+"");
		map.put(InterfaceLib.GetOnlineList.count, PAGE_SIZE+"");
		request.request(InterfaceLib.GetOnlineList.apiActionName, map, false,"正在获取活动列表...");
	}
	
	/**
	 * 更新ListView
	 * */
	private void updateListView(Onlines onlines)
	{
		dataList.addAll(onlines.getOnlines());
		adapter.notifyDataSetChanged();
	}
	
	/**
	 * 处理导航项的点击事件
	 * 默认就会进行调用
	 * 
	 * */
	@Override
	public boolean onNavigationItemSelected(int itemPosition, long itemId) {

		//TODO 这里可能存在问题，当前线程如果还在运行的话，需要先cancel
		
//		if(task != null && task.getStatus() == AsyncTask.Status.RUNNING){
//			
//			L.d("task Cancel", "++++++++++++++++++++++++");
//			task.cancel(true);
//		}
//		if(itemPosition == 3){
//			
//			ToastUtil.show(this, "还没做");//我的活动,判断下当前用户是否已经登录了
//		}else{
//			
//			switch (itemPosition) {
//			case 0:
//				setCateType(Task_GetOnlineList.CATE_TYPE_DAY);//本日最热
//				break;
//				
//			case 1:
//				setCateType(Task_GetOnlineList.CATE_TYPE_WEEK);//本周最热
//				break;
//				
//			case 2:
//				setCateType(Task_GetOnlineList.CATE_TYPE_LATEST);//最新活动
//				break;
//
//			default:
//				break;
//			}
//			getOnlineList(0, DEFAULT_COUNT_VALUE, getCateType(), false, true);//第一次先获取前10条数据
//		}
		
		return true;
	}
	
	/**
	 * 跳转到关于的界面
	 * */
	@Override
	public boolean onOptionsItemSelected(MenuItem menuItem) {
		switch (menuItem.getItemId()) {
	    case android.R.id.home:
	    	
	    	Intent intent = new Intent(MainActivity.this, AboutActivity.class);
	    	startActivity(intent);
	    	return true;
		}
	  return (super.onOptionsItemSelected(menuItem));
	}
}























